# =============================================================================
# SATELLITE MISSION CONTROL DSL - APPLICATION CONFIGURATION
# =============================================================================

# Application Configuration
spring.application.name=satops-dsl
server.port=1302

# Development Settings
spring.devtools.restart.enabled=false

# =============================================================================
# AUTO-CONFIGURATION EXCLUSIONS
# =============================================================================
# Disable OptaPlanner auto-configuration (Kafka removed - will be handled differently)
spring.autoconfigure.exclude=org.optaplanner.spring.boot.autoconfigure.OptaPlannerAutoConfiguration

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Reduce Spring framework noise
logging.level.org.springframework=WARN

# Enable detailed logging for our simulator
logging.level.com.dsl.simulator=INFO

# Silence Kafka connection warnings completely
logging.level.org.apache.kafka=ERROR
logging.level.org.springframework.kafka=ERROR
logging.level.org.apache.kafka.clients.NetworkClient=ERROR
logging.level.kafka=ERROR

# =============================================================================
# WEB CONFIGURATION
# =============================================================================
# Enable cross-origin requests for development
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# =============================================================================
# KAFKA CONFIGURATION (DISABLED)
# =============================================================================
# Disable Kafka completely by not configuring bootstrap servers
# This will prevent Kafka from trying to connect
# spring.kafka.bootstrap-servers=localhost:9092

# =============================================================================
# MISSION CONTROL SPECIFIC SETTINGS
# =============================================================================
# Real-time data refresh intervals (in seconds)
satellite.telemetry.refresh.interval=5
space.weather.refresh.interval=300
iss.position.refresh.interval=10

# Alert system configuration
alerts.enable.battery.monitoring=true
alerts.battery.critical.threshold=20
alerts.battery.warning.threshold=40

# Optimization settings
optimization.mission.planning.enabled=true
optimization.formation.flying.enabled=true
optimization.collision.avoidance.enabled=true

# API integration settings
api.nasa.iss.enabled=true
api.noaa.space.weather.enabled=true
api.celestrak.tle.enabled=true

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Thread pool configuration for async operations
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=20
spring.task.execution.pool.queue-capacity=100

# HTTP client timeouts
spring.http.client.timeout.connection=10000
spring.http.client.timeout.read=30000

# =============================================================================
# ACTUATOR CONFIGURATION (Optional - for monitoring)
# =============================================================================
# Enable health and info endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# =============================================================================
# FUTURE CONFIGURATION (Ready to enable when needed)
# =============================================================================

# Database Configuration (Ready for future use)
# spring.datasource.url=jdbc:postgresql://localhost:5432/satops_mission_control
# spring.datasource.username=satops_user
# spring.datasource.password=satops_password
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=false

# Cache Configuration (Ready for future use)
# spring.cache.type=caffeine
# spring.cache.caffeine.spec=maximumSize=500,expireAfterAccess=600s

# Security Configuration (Ready for future use)
# spring.security.user.name=mission_control
# spring.security.user.password=secure_password_2025

# =============================================================================
# END OF CONFIGURATION
# =============================================================================
